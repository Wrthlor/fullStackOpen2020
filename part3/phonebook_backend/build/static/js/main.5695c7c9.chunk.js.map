{"version":3,"sources":["components/Person.js","components/List.js","components/Form.js","components/Filter.js","components/Notification.js","services/profiles.js","App.js","index.js"],"names":["Person","info","handleDelete","name","number","onClick","id","List","people","profileList","map","individual","Form","props","onSubmit","handleSubmit","value","nameValue","onChange","nameChange","numberValue","numberChange","type","Filter","Notification","message","className","baseURL","profiles","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","delete","update","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","phonebook","initialProfiles","catch","error","console","lowerCasedNames","toLowerCase","titleCase","str","replace","s","toUpperCase","getNotification","setTimeout","filteredList","filter","includes","event","target","preventDefault","length","test","window","confirm","newNumb","oldProf","find","idVal","updatedProf","updatedP","log","updateProfile","casedName","personObject","concat","createProfile","indiv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5695c7c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({ info, handleDelete }) => {\r\n\r\n  return (\r\n    <li>\r\n      {info.name} {\"\"}\r\n      {info.number} {\"\"}\r\n      <button onClick={() => handleDelete(info.id)} >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default Person;","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst List = ({ people, handleDelete}) => {\r\n\r\n    // Creates a new array of people (dislaying via <Person /> component)\r\n    const profileList = people.map( (individual) => <Person key={individual.id} info={individual} handleDelete={handleDelete} />)\r\n    \r\n    return (\r\n        <div>\r\n            {profileList}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List; ","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                Name: <input value={props.nameValue} onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={props.numberValue} onChange={props.numberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" >Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form; ","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            Filter list of names: <input value={props.value} onChange={props.onChange} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter; ","const Notification = ({ message, className }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return  (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios';\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL);\r\n    /*\r\n    // Hard-coded profile for error testing\r\n    const nonExisting = {\r\n        name: \"No Man\",\r\n        number: \"000-000-0000\",\r\n        id: \"1000\"\r\n    }*/\r\n    return request.then(response => response.data/*.concat(nonExisting)*/);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request =  axios.post(baseURL, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\n\r\nconst profiles = {\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    update\r\n};\r\nexport default profiles;","import React, { useState, useEffect } from 'react';\r\n\r\nimport List from './components/List';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\nimport Notification from './components/Notification'\r\n\r\nimport phonebook from './services/profiles';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState(\"\");\r\n  const [ newNumber, setNewNumber ] = useState(\"\");\r\n  const [ nameFilter, setNameFilter ] = useState(\"\");\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null);\r\n  const [ notificationType, setNotificationType ] = useState(null);\r\n\r\n  useEffect(() => {    \r\n    phonebook\r\n      .getAll()\r\n      .then(initialProfiles => setPersons(initialProfiles))\r\n      .catch(error => console.error(error))\r\n  }, []);\r\n\r\n  const lowerCasedNames = persons.map(individual => individual.name.toLowerCase());\r\n\r\n  // regex variable to get first letter of words in string \r\n  // \\b = word boundary, \\w = one word character, g = global\r\n  const titleCase = str => {\r\n    const regex = /\\b(\\w)/g;\r\n    return str\r\n      .toLowerCase()\r\n      .replace(\r\n        regex, \r\n        s => s.toUpperCase() \r\n      );\r\n  };\r\n\r\n  const getNotification = (message, type) => {\r\n    setNotificationMessage(message);\r\n    setNotificationType(type);\r\n    setTimeout(() => {\r\n      setNotificationMessage(null);\r\n      setNotificationType(null);\r\n    }, 5000);\r\n  }\r\n\r\n  const createProfile = () => {\r\n    const casedName = titleCase(newName);\r\n\r\n    const personObject = {\r\n        name: casedName,\r\n        number: newNumber,\r\n    };\r\n\r\n    // Sends personObject to server \r\n    // Updates persons state with new array (includes new person object)\r\n    phonebook\r\n      .create(personObject)\r\n      .then(response => {\r\n        setPersons(persons.concat(response));\r\n        getNotification(`\"${casedName}\" has been added`, \"update\");\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  // Number input is numeric (can contain \"singular dashes\")\r\n  // \\s* = zero or more whitespaces, \\d+ = one or more numbers, -? = zero or one dash, \r\n  // Supports up to 2 dashes in between 3 groups of numbers - ex. ###-###-#### (good), #-### (good), ##--# (bad), #-###-###-#### (bad)\r\n  const checkValidNumber = number => {    \r\n    const numbRegex = /^(\\s*|\\d+-?\\d*-?\\d*)$/;\r\n    return numbRegex.test(number);\r\n  }\r\n\r\n  const checkDupeProfile = name => lowerCasedNames.includes(name.toLowerCase())\r\n\r\n  const confirmUpdate = message =>  window.confirm(message);\r\n\r\n  const updateProfile = (name, newNumb) => {\r\n    const oldProf = persons.find(people => people.name.toLowerCase() === name.toLowerCase());\r\n    const idVal = oldProf.id;\r\n    const updatedProf = {...oldProf, number: newNumb};\r\n\r\n    phonebook \r\n      .update(idVal, updatedProf)\r\n      .then(updatedP => {\r\n        setPersons(persons.map(people => people.id !== idVal ? people : updatedP));\r\n        getNotification(`${titleCase(name)}'s number has been updated`, \"update\");\r\n      })\r\n      .catch(error => {\r\n        setPersons(persons.filter(people => people.id !== idVal));\r\n        getNotification(`Information for \"${titleCase(name)}\" has already been removed from server`, \"error\");\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (newName === \"\") {\r\n      getNotification(`Please enter a name`, \"error\");\r\n    }\r\n    else {\r\n      if (newName.length < 3) {\r\n        getNotification(`Name (${newName}) is shorter than the minimum length (3).`, \"error\")\r\n      }\r\n      else {\r\n        if (newNumber === \"\") {\r\n          getNotification(`Please enter a number`, \"error\");\r\n        }\r\n        else {\r\n          if (!checkValidNumber(newNumber)) {\r\n            getNotification(`Invalid number`, \"error\");\r\n          }\r\n          else {\r\n            if (newNumber.length < 8) {\r\n              getNotification(`Number (${newNumber}) is shorter than the minimum length (8).`, \"error\")\r\n            }\r\n            else {\r\n              if (checkDupeProfile(newName)) {\r\n                if (confirmUpdate(`\"${newName}\" is already added to server, replace the old number with a new one?`)) {\r\n                  updateProfile(newName, newNumber);\r\n                }\r\n              }\r\n              else {\r\n                createProfile();\r\n              }  \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  }\r\n\r\n  const handleDelete = id => {\r\n    const indiv = persons.find(people => people.id === id);\r\n    const confirmDel = window.confirm(`Delete \"${indiv.name}\"?`);\r\n\r\n    if(confirmDel) {\r\n      phonebook\r\n        .deletePerson(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(people => people.id !== id));\r\n          getNotification(`\"${indiv.name}\" has been removed from server`, \"update\");\r\n          setNameFilter(\"\");\r\n        })\r\n        .catch(error => {\r\n          setPersons(persons.filter(people => people.id !== id))\r\n          getNotification(`Information of \"${indiv.name}\" has already been removed from server`, \"error\");\r\n          console.log(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNewName = event => setNewName(event.target.value);\r\n  const handleNewNumber = event => setNewNumber(event.target.value);\r\n  const handleNameFilter = event => setNameFilter(event.target.value);\r\n\r\n  const filteredList = persons.filter(people => \r\n    people.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter \r\n        value={nameFilter} \r\n        onChange={handleNameFilter} \r\n      />\r\n\r\n      <h3>Add new profile</h3>\r\n      <Notification \r\n        message={notificationMessage}\r\n        className={notificationType}\r\n      />\r\n      <Form \r\n        handleSubmit={handleSubmit}\r\n        nameValue={newName}\r\n        nameChange={handleNewName}\r\n        numberValue={newNumber}\r\n        numberChange={handleNewNumber}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <List\r\n        people={filteredList} \r\n        handleDelete={handleDelete}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}